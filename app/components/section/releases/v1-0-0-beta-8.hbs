<Layout::Blocks cols-1 as |block|>
	<block>
		<h4 row middle>
			Embedding the results of a subquery
		</h4>
		<p>SurrealDB now allows you to use the resulting Record IDs of a subquery, and embed them within another record, without having to specify the <code>id</code> field specifically.</p>
	</block>
	<block>
		<Code @name="docs-releases-1-0-0-beta-8-subquery.surql">
			// It is now possible to define a new Record ID as normal
			LET $friend = (CREATE person SET name = 'Jaime');
			// There is no need to select the `id` field using `$friend.id`
			CREATE person SET name = "Tobie", friend = $friend;
		</Code>
	</block>
	<block>
		<h4 row middle>
			Embedded Record IDs in <code>CREATE</code> and <code>RELATE</code> statements
		</h4>
		<p>SurrealDB now supports the ability to set a specific reocrd ID in the record content itself when creating records using <code>CREATE</code> and <code>RELATE</code> statements.</p>
	</block>
	<block>
		<Code @name="docs-releases-1-0-0-beta-8-id.surql">
			// It is now possible to define a new Record ID as normal
			CREATE person:test SET name = "Tobie";
			// Or by specifying the Record ID within the record data part of the query
			CREATE person SET id = person:test, name = "Tobie";
			// In addition the ID can be specified in a CONTENT object
			CREATE person CONTENT { id: person:test, name: "Tobie" };
			// Numbers can be used, and will be converted into a Record ID
			CREATE user CONTENT { id: 1, name: "Robert" };
			// Strings can be used, and will be converted into a Record ID
			CREATE city CONTENT { id: "London", name: "London" };
			// UUIDs can be used, and will be converted into a Record ID
			CREATE city CONTENT { id: "8e60244d-95f6-4f95-9e30-09a98977efb0", name: "London" };
			// Complex values can be used, and will be converted into a Record ID
			CREATE temperature CONTENT { id: ["London", time::now()], name: "London" };
			// Complex values can be used, and will be converted into a Record ID
			RELATE person:tobie->knows->person:jaime SET id = knows:cofounder;
		</Code>
	</block>
	<block>
		<h4 row middle>
			Support for deep-merge record updates
		</h4>
		<p>SurrealDB now supports deep-merging record changes, ensuring that only specified object fields are modified and overwritten.</p>
	</block>
	<block>
		<Code @name="docs-releases-1-0-0-beta-8-merging.surql">
			// Create a record
			CREATE person:test SET name.initials = 'TMH', name.first = 'Tobie', name.last = 'Morgan Hitchcock';
			// Use the MERGE clause to deep merge objects, without overwriting any fields
			UPDATE person:test MERGE {
				name: {
					title: 'Mr',
					initials: NONE,
				},
				tags: ['Rust', 'Golang', 'JavaScript'],
			};
		</Code>
	</block>
	<block>
		<h4 row middle>
			Dynamic expressions in complex Record IDs
		</h4>
		<p>Complex Record IDs now support dynamic expressions, allowing parameters, and function expressions to be used as values within the IDs. This is useful in a timeseries context, or for ensuring locality between specific records in a table.</p>
	</block>
	<block>
		<Code @name="docs-releases-1-0-0-beta-8-complex.surql">
			// Set a new parameter
			LET $now = time::now();
			// Create a record with a complex ID using an array
			CREATE temperature:['London', $now] SET
				location = 'London',
				date = $now,
				temperature = 23.7
			;
			// Create a record with a complex ID using an object
			CREATE temperature:{ location: 'London', date: $now } SET
				location = 'London',
				date = $now,
				temperature = 23.7
			;
			// Select a range of records up to the current time
			SELECT * FROM temperature:['London', '2022-08-29T08:03:39']..['London', time::now()];
		</Code>
	</block>
</Layout::Blocks>